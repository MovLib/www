<?xml version="1.0" encoding="UTF-8"?>
<!--
  This file is part of {@link https://github.com/MovLib MovLib}.

  Copyright © 2013-present {@link https://movlib.org/ MovLib}.

  MovLib is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
  License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
  version.

  MovLib is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License along with MovLib.
  If not, see {@link http://www.gnu.org/licenses/ gnu.org/licenses}.
-->

<!--
  PHP CodeSniffer ruleset.

  AUTHOR:    Richard Fussenegger <richard@fussenegger.info>
  COPYRIGHT: © 2013 MovLib
  LICENSE:   http://www.gnu.org/licenses/agpl.html AGPL-3.0
  LINK:      https://movlib.org/
  SINCE:     0.0.1-dev
-->
<ruleset name="MovLib">
  <description>The MovLib coding standard.</description>

  <!-- Include the whole PSR-1 standard. -->
  <rule ref="PSR1"/>

  <!-- All files MUST use the Unix LF (linefeed) line ending. -->
  <rule ref="Generic.Files.LineEndings">
    <properties>
      <property name="eolChar" value="\n"/>
    </properties>
  </rule>

  <!-- All files MUST end with a single blank line. -->
  <rule ref="PSR2.Files.EndFileNewLine"/>

  <!-- The closing ?> tag MUST be omitted from files containing only PHP. -->
  <rule ref="Zend.Files.ClosingTag"/>

  <!-- The soft limit on line length MUST be 120 characters; automated style checkers MUST warn but MUST NOT error at the soft limit. -->
  <rule ref="Generic.Files.LineLength">
    <properties>
      <property name="lineLimit" value="120"/>
      <property name="absoluteLineLimit" value="0"/>
    </properties>
  </rule>

  <!-- There MUST NOT be trailing whitespace at the end of non-blank lines. -->
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
    <properties>
      <property name="ignoreBlankLines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
    <severity>0</severity>
  </rule>

  <!-- There MUST NOT be more than one statement per line. -->
  <rule ref="Generic.Formatting.DisallowMultipleStatements"/>

  <!-- Code MUST use an indent of 2 spaces, and MUST NOT use tabs for indenting. -->
  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <properties>
      <property name="indent" value="2"/>
      <property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT"/>
    </properties>
  </rule>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

  <!-- PHP keywords MUST be in lower case. -->
  <rule ref="Generic.PHP.LowerCaseKeyword"/>

  <!-- The PHP constants true, false, and null MUST be in lower case. -->
  <rule ref="Generic.PHP.LowerCaseConstant"/>

  <!-- When present, there MUST be one blank line after the namespace declaration. -->
  <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>

  <!--
    When present, all use declarations MUST go after the namespace declaration.
    There MUST be one use keyword per declaration.
    There MUST be one blank line after the use block.
  -->
  <rule ref="PSR2.Namespaces.UseDeclaration"/>

  <!-- TODO: This differs from our standard! -->
  <!--
    The extends and implements keywords MUST be declared on the same line as the class name.
    The opening brace for the class go MUST go on its own line; the closing brace for the class MUST go on the next
    line after the body.
    Lists of implements MAY be split across multiple lines, where each subsequent line is indented once. When doing
    so, the first item in the list MUST be on the next line, and there MUST be only one interface per line.
  -->
  <!--<rule ref="PSR2.Classes.ClassDeclaration"/>-->

  <!--
    Visibility MUST be declared on all properties.
    The var keyword MUST NOT be used to declare a property.
    There MUST NOT be more than one property declared per statement.
    Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility.
  -->
  <rule ref="PSR2.Classes.PropertyDeclaration"/>

  <!-- Visibility MUST be declared on all methods. -->
  <rule ref="Squiz.Scope.MethodScope"/>
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

  <!-- Method names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
  <rule ref="PSR2.Methods.MethodDeclaration"/>

  <!--
    Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and
    the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening
    parenthesis, and there MUST NOT be a space before the closing parenthesis.
  -->
  <rule ref="Squiz.Functions.FunctionDeclaration"/>
  <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

  <!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
    <properties>
      <property name="equalsSpacing" value="1"/>
    </properties>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
    <severity>0</severity>
  </rule>

  <!-- Method arguments with default values MUST go at the end of the argument list. -->
  <rule ref="PEAR.Functions.ValidDefaultValue"/>

  <!--
    When present, the abstract and final declarations MUST precede the visibility declaration.
    When present, the static declaration MUST come after the visibility declaration.
  -->
  <rule ref="PSR2.Methods.MethodDeclaration"/>

  <!--
    When making a method or function call, there MUST NOT be a space between the method or function name and the opening
    parenthesis, there MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the
    closing parenthesis. In the argument list, there MUST NOT be a space before each comma, and there MUST be one space
    after each comma.
    Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the
    first item in the list MUST be on the next line, and there MUST be only one argument per line.
  -->
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
  <rule ref="PSR2.Methods.FunctionCallSignature">
    <properties>
      <property name="indent" value="2"/>
    </properties>
    <severity>0</severity>
  </rule>

</ruleset>
