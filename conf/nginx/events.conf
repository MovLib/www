# ----------------------------------------------------------------------------------------------------------------------
# Nginx events configuration.
#
# How this file is organized: We are mainly using the official documentation for each option. This should help users to
# understand each option without starting to search for the directives. For more complex directives (or even
# undocumented ones) we write up something or quote another web resource. Always check the provided link for the source.
#
# Options are ordered alphabetically within their sections and sections are also ordered alphabetically.
#
# AUTHOR: Richard Fussenegger <richard@fussenegger.info>
# COPYRIGHT: (c) 2013-present, MovLib
# LICENSE: http://www.gnu.org/licenses/agpl.html AGPL-3.0
# VERSION: 0.0.1
# ----------------------------------------------------------------------------------------------------------------------

events {
  # If enabled, accepts of new connections by multiple worker processes will be serialized. Otherwise, all worker
  # processes will be notified about new connections, and if volume of new connections is low, some of the worker
  # processes may just waste system resources.
  #
  # SYNTAX:     accept_mutex on | off;
  # DEFAULT:    on
  # LINK:       http://nginx.org/en/docs/ngx_core_module.html#accept_mutex
  accept_mutex on;

  # If accept_mutex is enabled, specifies the maximum time during which a worker process will try to restart accepting
  # new connections if another worker process is already doing this currently.
  #
  # SYNTAX:     accept_mutex_delay time;
  # DEFAULT:    500ms
  # LINK:       http://nginx.org/en/docs/ngx_core_module.html#accept_mutex_delay
  accept_mutex_delay 50ms;

  # If disabled, a worker process will accept one new connection at a time. Otherwise, a worker process will accept all
  # new connections at a time.
  #
  # SYNTAX:     multi_accept on | off;
  # DEFAULT:    off
  # LINK:       http://nginx.org/en/docs/ngx_core_module.html#multi_accept
  multi_accept on;

  # Specifies the connection processing method to use. There is normally no need to specify it explicitly because nginx
  # will by default use the most efficient method.
  #
  # SYNTAX:     use method;
  # DEFAULT:    most efficient method
  # LINK:       http://nginx.org/en/docs/ngx_core_module.html#use
  # LINK:       http://nginx.org/en/docs/events.html
  #use epoll;

  # When using aio with the epoll connection processing method, sets the maximum number of outstanding asynchronous I/O
  # operations for a single worker process.
  #
  # NOTE:       Generally it's a bad idea to activate  asynchronous I/O on Linux based systems. It disables many useful
  #             features and bypasses the built-in file cache. Sendfile is also automatically disabled. If you're on a
  #             BSD based system, use it.
  # SYNTAX:     worker_aio_requests number;
  # DEFAULT:    32
  # SINCE:      1.0.7 | 1.1.4
  # LINK:       http://nginx.org/en/docs/ngx_core_module.html#worker_aio_requests
  #worker_aio_requests 32;

  # Sets the maximum number of simultaneous connections that can be opened by a worker process.
  #
  # It should be kept in mind that this number includes all connections (e.g. connections with proxied servers, among
  # other things), not only connections with clients. Another consideration is that the actual number of simultaneous
  # connections may not exceed the current limit on the maximum number of open files that can be changed by
  # worker_rlimit_nofile.
  #
  # NOTE:       Value should be power of 2.
  # SYNTAX:     worker_connections number;
  # DEFAULT:    512
  # LINK:       http://nginx.org/en/docs/ngx_core_module.html#worker_connections
  worker_connections 16384;
}
