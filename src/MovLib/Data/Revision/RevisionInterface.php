<?php

/*!
 * This file is part of {@link https://github.com/MovLib MovLib}.
 *
 * Copyright © 2013-present {@link https://movlib.org/ MovLib}.
 *
 * MovLib is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * MovLib is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with MovLib.
 * If not, see {@link http://www.gnu.org/licenses/ gnu.org/licenses}.
 */
namespace MovLib\Data\Revision;

/**
 * Defines the revision interface.
 *
 * An entity that implements the revision interface acknowledges that a corresponding revision class exists. We can't
 * enforce the creation of that file and we don't want to merge those classes, although they are more or less the same.
 * The future has to show if this design decision is good or bad.
 *
 * @author Richard Fussenegger <richard@fussenegger.info>
 * @copyright © 2014 MovLib
 * @license http://www.gnu.org/licenses/agpl.html AGPL-3.0
 * @link https://movlib.org/
 * @since 0.0.1-dev
 */
interface RevisionInterface {

  /**
   * Commit a new revision of the entity.
   *
   * @param integer $userId
   *   The user's unique identifier who edited the entity.
   * @param \MovLib\Data\DateTime $dateTime
   *   The date and time the user edited the entity, should be the request time generated by nginx.
   * @param string $languageCode
   *   The language code of the current request.
   * @param \MovLib\Core\Log $logger
   *   A logger instance to log subsequent events.
   * @return this
   * @throws \mysqli_sql_exception
   */
  public function commit($userId, \MovLib\Data\DateTime $dateTime, $languageCode, \MovLib\Core\Log $logger);

  /**
   * Update the entity's database entry.
   *
   * <b>NOTE</b><br>
   * Calling this method won't create a new revision, you have to call the <code>commit()</code> of the entity to create
   * a new revision along with an update of the database entry.
   *
   * @param integer $userId
   *   The user's unique identifier who edited the entity.
   * @param \MovLib\Data\DateTime $dateTime
   *   The date and time the user edited the entity, should be the request time generated by nginx.
   * @param string $languageCode
   *   The language code of the current request.
   * @param \MovLib\Core\Log $logger
   *   A logger instance to log subsequent events.
   * @return this
   * @throws \mysqli_sql_exception
   */
  public function update($userId, \MovLib\Data\DateTime $dateTime, $languageCode, \MovLib\Core\Log $logger);

}
